- [LIMITATION] Can't use jsx in js files. Files with jsx should have .jsx extension
  - Work arounds are not recommended according to vite maintainer https://github.com/vitejs/vite/discussions/3112#discussioncomment-650971

- [PARTIALLY SOLVED] CSS getting bundled as separate file
  - Used vite-plugin-css-injected-by-js to inject CSS to JS file

- [LIMITATION] All static files getting inlined in the JS bundle regardless of size when using build.lib
  - "Assets will always be inlined, regardless of file size, and build.assetsInlineLimit will be ignored if you specify build.lib"

- [LIMITATOIN] All static assets regardless of the entry point will be put in the same folder

- [ISSUE] [SOLVED] Build generating js files with just imports or chunks that are empty
  - https://github.com/rollup/rollup/issues/3358
  - preserveEntrySignatures: 'allow-extension'

- [CHALLENGE #4] Separate chunks created for shared modules when using multiple input files
  - https://github.com/rollup/rollup/issues/2756
  - Issue raised in Rollup repo in 2019. Maintainer not interested in adding the feature to produce standalone bundles
  - Maintainer: " It is not possible to build several overlapping targets in the same build without code-splitting. One core principle in Rollup's architecture is at the moment that each module exists only once." (Mar 2019)
  - Maintainer:  "... it is actually quite difficult as everything is designed around the concept 'each module exists only once in the graph'" (Nov 2021)
  - "manualChunks: false" (Doesn't work)
  -  manualChunks: () => "everything.js" (Not sure if it works)
  - Possible solution: Run build individually for each entry point. Limitation: High memory usage and long build times, especially when having a lot of files

- [CHALLEGE #5] CSS of the entire build regardless of the entry point is compiled in to a single file (injected using plugin to js files)
  - https://github.com/vitejs/vite/discussions/11386

